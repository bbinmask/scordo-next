// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Enums

enum Role {
  player
  fan
  admin
}

enum Gender {
    male
    female
    other
}


enum Availability {
  available
  injured
  on_break
}


enum MatchCategory {
  T10
  T20
  ODI
  Test
  others
}

enum AuthProvider {
  email
  google
  facebook
  github
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String   @unique
  isVerified   Boolean  @default(false)
  username     String   @unique
  contact        String
  password     String
  profile      String
  bio          String?
  gender       Gender
  role         Role
  availability Availability
  dob          DateTime
  friends      String[]
  tournaments  String[]
  addressId    String? @db.ObjectId @unique
  address      Address? @relation(fields: [addressId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Match {
 id String @default(auto()) @id @db.ObjectId @map("_id")
 players String[] @unique

}

model Team {
  id       String   @id @default(auto()) @db.ObjectId @map("_id")
  name String
  logo String
  banner String
  abbreviation String
  players String[] @unique
  category MatchCategory
  match    String
  ownerId   String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


}



model TournamentRequest {
  id      String    @id @default(auto()) @db.ObjectId @map("_id")
  to String @unique @db.ObjectId
  from String @unique @db.ObjectId
    createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TeamRequest {
  id     String   @id @default(auto()) @db.ObjectId @map("_id")
  to String @unique @db.ObjectId
  from String @unique @db.ObjectId
  teamId String @unique @db.ObjectId
    createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Address {
  id      String   @id @default(auto()) @db.ObjectId @map("_id")
  city    String
  state   String
  country String
  user    User?
}
